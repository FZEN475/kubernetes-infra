
- hosts: control_main
  become: true
  tasks:
    - name: secret facts
      ansible.builtin.set_fact:
        sa:
          - { "sa": "flask-example-1-sa", "ns": "dev" }
          - { "sa": "flask-example-1-sa", "ns": "prod" }

    - name: Create ServiceAccounts
      kubernetes.core.k8s:
        state: present
        wait: true
        definition:
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: "{{ item.sa }}"
            namespace: "{{ item.ns }}"
      with_items: "{{ sa }}"

    - name: secret facts
      ansible.builtin.set_fact:
        flask_example_1_registry_secret_data:
          .dockerconfigjson: !unsafe |
            {"auths":{"https://registry.fzen.pro/v2/":{"username":"{{ .registry_user }}","password":"{{ .registry_token }}","email":"admin@fzen.pro","auth":"{{- printf "%s:%s" .registry_user .registry_token | b64enc -}}"}}}

    - name: secret facts
      ansible.builtin.set_fact:
        secrets:
    # /////////////////////// flask-example-1-pool-secrets //////////////////////
          - { ns: "dev", resource: "flask-ex-1", sa: "flask-example-1-sa", secret_name: "flask-example-1-registry-secrets",
              data: "{{ flask_example_1_registry_secret_data }}", es_type: "kubernetes.io/dockerconfigjson",
              list: [
                { "vault": true, "key": "registry_token", "value": "" },
                { "vault": true, "key": "registry_user", "value": "" }
              ]}
          - { ns: "prod", resource: "flask-ex-1", sa: "flask-example-1-sa", secret_name: "flask-example-1-registry-secrets",
              data: "{{ flask_example_1_registry_secret_data }}", es_type: "kubernetes.io/dockerconfigjson",
              list: [
                { "vault": true, "key": "registry_token", "value": "" },
                { "vault": true, "key": "registry_user", "value": "" }
              ]}
    # //////////////////////////////////////////////////////

    - name: Create secrets in Vault
      ansible.builtin.include_tasks: /source/playbooks/library/vault/add_vault_secret.yaml
      vars:
        ns: "{{ item.ns }}"
        resource: "{{ item.resource }}"
        secret_name: "{{ item.secret_name }}"
        cluster_access: "{{ item.cluster_access }}"
        sa: "{{ item.sa }}"
        store_name: "{{ item.store_name }}"
        list: "{{ item.list }}"
        data: "{{ item.data }}"
        es_type: "{{ item.es_type }}"
      with_items: "{{ secrets }}"